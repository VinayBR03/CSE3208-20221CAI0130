# -*- coding: utf-8 -*-
"""AI_06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12KhIvSgsCMxiXt7aXEnS_NI8oXf4bu5e
"""

MAX,MIN=1000,-1000
def minimax(depth,nodeIndex,maximizingPlayer,values,alpha,beta,branching,maxDepth):
  if depth==maxDepth:
    return values[nodeIndex]
  if maximizingPlayer:
    best=MIN
    for i in range(0,branching):
      val=minimax(depth+1,nodeIndex*2+i,False,values,alpha,beta,branching,maxDepth)
      best=max(best,val)
      alpha=max(alpha,best)
      if beta<=alpha:
        break
    return best
  else:
    best=MAX
    for i in range(0,branching):
      val=minimax(depth+1,nodeIndex*2+i,True,values,alpha,beta,branching,maxDepth)
      best=min(best,val)
      beta=min(beta,best)
      if beta<=alpha:
        break
    return best

b=2
maxDepth=3
values=[3,5,6,9,1,2,0,-1]
print("The optimal value is :",minimax(0,0,True,values,MIN,MAX,b,maxDepth))

b=4
maxDepth=2
values=[3,5,6,9,1,2,0,-1,-3,-5,-6,-9,-1,-2,0,1]
print("The optimal value is :",minimax(0,0,True,values,MIN,MAX,b,maxDepth))

